var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _currencyCodes=require("currency-codes");require("intl");require("intl/locale-data/jsonp/en");var _jsxFileName="/Users/drew/Projects/wwdrew/react-native-numeric-textinput/src/NumericTextInput.js";var NumericTextInput=function(_PureComponent){(0,_inherits2.default)(NumericTextInput,_PureComponent);function NumericTextInput(props){var _this;(0,_classCallCheck2.default)(this,NumericTextInput);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(NumericTextInput).call(this,props));_this.onUpdate=function(text){var onUpdate=_this.props.onUpdate;var parsedValue=_this.parseStringValue(text,_this.formatConfig);if(onUpdate){onUpdate(parsedValue);}};_this.formatConfig=_this.createFormatConfig(props);return _this;}(0,_createClass2.default)(NumericTextInput,[{key:"createFormatConfig",value:function createFormatConfig(props){var _props$locale=props.locale,locale=_props$locale===void 0?'en-GB':_props$locale,_props$type=props.type,type=_props$type===void 0?'decimal':_props$type,_props$useGrouping=props.useGrouping,useGrouping=_props$useGrouping===void 0?true:_props$useGrouping;var typeOptions={};var _props$decimalPlaces=props.decimalPlaces,decimalPlaces=_props$decimalPlaces===void 0?0:_props$decimalPlaces;if(type==='currency'){var _props$currency=props.currency,currency=_props$currency===void 0?'GBP':_props$currency;typeOptions.currency=currency;decimalPlaces=(0,_currencyCodes.code)(currency).digits;}else{typeOptions.minimumFractionDigits=decimalPlaces;}return(0,_extends2.default)({},typeOptions,{locale:locale,style:type,useGrouping:useGrouping,divisor:Math.pow(10,decimalPlaces)});}},{key:"formatNumberValue",value:function formatNumberValue(numberValue,numberFormatConfig){var returnValue='';if(numberValue){var locale=numberFormatConfig.locale,config=(0,_objectWithoutProperties2.default)(numberFormatConfig,["locale"]);returnValue=new Intl.NumberFormat(locale,config).format(numberValue);}return returnValue;}},{key:"parseStringValue",value:function parseStringValue(text,numberFormatConfig){var digitsOnly=text.match(/\d+/g);return digitsOnly?parseInt(digitsOnly.join(''),10)/numberFormatConfig.divisor:undefined;}},{key:"render",value:function render(){var _this$props=this.props,onUpdate=_this$props.onUpdate,value=_this$props.value,textInputProps=(0,_objectWithoutProperties2.default)(_this$props,["onUpdate","value"]);return _react.default.createElement(_reactNative.TextInput,(0,_extends2.default)({},textInputProps,{value:this.formatNumberValue(value,this.formatConfig),keyboardType:"number-pad",onChangeText:this.onUpdate,caretHidden:true,__source:{fileName:_jsxFileName,lineNumber:103}}));}}]);return NumericTextInput;}(_react.PureComponent);var _default=NumericTextInput;exports.default=_default;